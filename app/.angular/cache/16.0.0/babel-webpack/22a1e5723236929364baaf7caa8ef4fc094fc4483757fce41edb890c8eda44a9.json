{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(router, bnIdle, startup) {\n    this.router = router;\n    this.bnIdle = bnIdle;\n    this.startup = startup;\n  }\n  ngOnInit() {\n    this.bnIdle.startWatching(600).subscribe(isTimedOut => {\n      if (isTimedOut) {\n        console.log('session expired');\n        localStorage.clear();\n        const url = this.constant.REDIRECT_LINKS.LOGIN;\n        this.router.navigateByUrl(url);\n      }\n    });\n    this.redirectToPath();\n  }\n  redirectToPath() {\n    if (location.pathname != '/approve') {\n      if (this.startup.getNavigationData.loggedInStatus && this.startup.getNavigationData.isTokenValid && (location.pathname == '/' || location.pathname == this.constant.REDIRECT_LINKS.LOGIN || location.pathname == this.constant.REDIRECT_LINKS.REGISTER)) {\n        this.router.navigateByUrl(this.constant.REDIRECT_LINKS.DASHBOARD);\n      } else if (this.startup.getNavigationData.loggedInStatus && this.startup.getNavigationData.isTokenValid && location.pathname != '/') {\n        this.router.navigateByUrl(location.pathname);\n      } else if (this.startup.getNavigationData.loggedInStatus && !this.startup.getNavigationData.isTokenValid) {\n        this.router.navigateByUrl(this.constant.REDIRECT_LINKS.LOGIN);\n      }\n    }\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","AppComponent","constructor","router","bnIdle","startup","ngOnInit","startWatching","subscribe","isTimedOut","console","log","localStorage","clear","url","constant","REDIRECT_LINKS","LOGIN","navigateByUrl","redirectToPath","location","pathname","getNavigationData","loggedInStatus","isTokenValid","REGISTER","DASHBOARD","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/abishekamstrong/work/eslint-multiroot/app/src/app/app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BnNgIdleService } from 'bn-ng-idle';\n\nimport { Constant } from '@core/constants';\nimport { StartupService } from '@core/services';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n    constructor(\n        private router: Router,\n        private bnIdle: BnNgIdleService,\n        private startup: StartupService\n    ) {}\n\n    ngOnInit(): void {\n        this.bnIdle.startWatching(600).subscribe((isTimedOut: boolean) => {\n            if (isTimedOut) {\n                console.log('session expired');\n                localStorage.clear();\n                const url: string = this.constant.REDIRECT_LINKS.LOGIN;\n                this.router.navigateByUrl(url);\n            }\n        });\n        this.redirectToPath();\n    }\n\n    redirectToPath() {\n        if (location.pathname != '/approve') {\n            if (\n                this.startup.getNavigationData.loggedInStatus &&\n                this.startup.getNavigationData.isTokenValid &&\n                (location.pathname == '/' ||\n                    location.pathname == this.constant.REDIRECT_LINKS.LOGIN ||\n                    location.pathname == this.constant.REDIRECT_LINKS.REGISTER)\n            ) {\n                this.router.navigateByUrl(\n                    this.constant.REDIRECT_LINKS.DASHBOARD\n                );\n            } else if (\n                this.startup.getNavigationData.loggedInStatus &&\n                this.startup.getNavigationData.isTokenValid &&\n                location.pathname != '/'\n            ) {\n                this.router.navigateByUrl(location.pathname);\n            } else if (\n                this.startup.getNavigationData.loggedInStatus &&\n                !this.startup.getNavigationData.isTokenValid\n            ) {\n                this.router.navigateByUrl(this.constant.REDIRECT_LINKS.LOGIN);\n            }\n        }\n    }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EACrBC,YACYC,MAAc,EACdC,MAAuB,EACvBC,OAAuB;IAFvB,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;EAChB;EAEHC,QAAQA,CAAA;IACJ,IAAI,CAACF,MAAM,CAACG,aAAa,CAAC,GAAG,CAAC,CAACC,SAAS,CAAEC,UAAmB,IAAI;MAC7D,IAAIA,UAAU,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9BC,YAAY,CAACC,KAAK,EAAE;QACpB,MAAMC,GAAG,GAAW,IAAI,CAACC,QAAQ,CAACC,cAAc,CAACC,KAAK;QACtD,IAAI,CAACd,MAAM,CAACe,aAAa,CAACJ,GAAG,CAAC;;IAEtC,CAAC,CAAC;IACF,IAAI,CAACK,cAAc,EAAE;EACzB;EAEAA,cAAcA,CAAA;IACV,IAAIC,QAAQ,CAACC,QAAQ,IAAI,UAAU,EAAE;MACjC,IACI,IAAI,CAAChB,OAAO,CAACiB,iBAAiB,CAACC,cAAc,IAC7C,IAAI,CAAClB,OAAO,CAACiB,iBAAiB,CAACE,YAAY,KAC1CJ,QAAQ,CAACC,QAAQ,IAAI,GAAG,IACrBD,QAAQ,CAACC,QAAQ,IAAI,IAAI,CAACN,QAAQ,CAACC,cAAc,CAACC,KAAK,IACvDG,QAAQ,CAACC,QAAQ,IAAI,IAAI,CAACN,QAAQ,CAACC,cAAc,CAACS,QAAQ,CAAC,EACjE;QACE,IAAI,CAACtB,MAAM,CAACe,aAAa,CACrB,IAAI,CAACH,QAAQ,CAACC,cAAc,CAACU,SAAS,CACzC;OACJ,MAAM,IACH,IAAI,CAACrB,OAAO,CAACiB,iBAAiB,CAACC,cAAc,IAC7C,IAAI,CAAClB,OAAO,CAACiB,iBAAiB,CAACE,YAAY,IAC3CJ,QAAQ,CAACC,QAAQ,IAAI,GAAG,EAC1B;QACE,IAAI,CAAClB,MAAM,CAACe,aAAa,CAACE,QAAQ,CAACC,QAAQ,CAAC;OAC/C,MAAM,IACH,IAAI,CAAChB,OAAO,CAACiB,iBAAiB,CAACC,cAAc,IAC7C,CAAC,IAAI,CAAClB,OAAO,CAACiB,iBAAiB,CAACE,YAAY,EAC9C;QACE,IAAI,CAACrB,MAAM,CAACe,aAAa,CAAC,IAAI,CAACH,QAAQ,CAACC,cAAc,CAACC,KAAK,CAAC;;;EAGzE;CACH;AA7CYhB,YAAY,GAAA0B,UAAA,EALxB3B,SAAS,CAAC;EACP4B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACrC,CAAC,C,EACW7B,YAAY,CA6CxB;SA7CYA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}